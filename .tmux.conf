
set-option -g status on
set-option -g status-interval 2
set-option -g status-utf8 on
set-window-option -g status-utf8 on

# Unable 256 color mode
set-option -g default-terminal screen-256color
set -g terminal-overrides 'xterm:colors=256'

# Change the prefix key to 'C-\'
set -g prefix 'C-\'
unbind C-b

# Move the status bar at the top of windows
set-option -g status-position top

# Reduce the delay of key strokes
set-option -sg escape-time 1

# Set the index of windows to 1 based
set-option -g base-index 1

# Set the index of panes to 1 based
set-window-option -g pane-base-index 1

set-option -g history-limit 5000

# Unable vi key bind
set-window-option -g mode-keys vi

# Share the contents of clipboards
# set-option -g default-command "reattach-to-user-namespace -l fish"

# Trick for making escape key react quickly
set-option -s escape-time 0

# Unable visual notification
set-window-option -g monitor-activity on
set-option -g visual-activity on

# Switch panes synchronously
set-option -g synchronize-panes off

# Unable to move panes using arrow keys
set-window-option -g xterm-keys on

# Switch panes
bind 'C-\' run "tmux last-pane || tmux last-window || tmux new-window"

bind d detach

# Edit titles
bind A command-prompt "rename-window %%"
bind S command-prompt "rename-session %%"

# Select a window
bind C-w choose-window

# Reload the config file
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Split window horizontally
bind | split-window -h

# Split window vertically
bind - split-window -v

# Use vi key bind to select a pane
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Use cursor keys to select a pane
bind -n S-left select-pane -L
bind -n S-down select-pane -D
bind -n S-up select-pane -U
bind -n S-right select-pane -R

# Enter copy mode by pressing C-up
bind -n C-up copy-mode \; display "copy mode"

# Move to adjacent panes
bind -n C-O select-pane -t :.+
bind -r C-o select-pane -t :.+
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Resize panes by vi key bind
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Begin and end synchronize-panes
bind e set-window-option synchronize-panes on \;\
  set-option -g status-bg red \; display 'synchronize begin'
bind E set-window-option synchronize-panes off \;\
  set-option -g status-bg $MYHOSTCOLOR \; display 'synchronize end'

# Use copy mode the vi-like way
bind Space copy-mode \; display "copy mode"
bind P paste-buffer
bind -T vi-copy v begin-selection
bind -T vi-copy V select-line
bind -T vi-copy C-v rectangle-toggle
bind -T vi-copy y copy-selection
bind -T vi-copy Y copy-line
bind -T vi-copy y copy-pipe "xsel"
bind -T vi-copy Enter copy-pipe "xsel"
bind -T vi-copy Escape cancel

# Copy and paste
bind [ copy-mode \; display "copy mode"
bind ] paste-buffer
bind C-] choose-buffer

# Break a pane
bind D break-pane -d \; display "break-pane"

# Ask whether to kill the current pane
bind C-x confirm-before 'kill-pane'

# Ask whether to kill the current window
bind C-X confirm-before 'kill-window'

# Ask whether to kill the current session
bind q confirm-before 'kill-session'

# Ask whether to kill tmux
bind C-q confirm-before 'kill-server'



# Enable tmux-powerline
if 'test -z "$DISABLE_TMUX_POWERLINE" -o "$DISABLE_TMUX_POWERLINE" = "false"' \
  'set-option -g status-justify "left"'
if 'test -z "$DISABLE_TMUX_POWERLINE" -o "$DISABLE_TMUX_POWERLINE" = "false"' \
  'set-option -g status-left-length 90'
if 'test -z "$DISABLE_TMUX_POWERLINE" -o "$DISABLE_TMUX_POWERLINE" = "false"' \
  'set-option -g status-right-length 60'
if 'test -z "$DISABLE_TMUX_POWERLINE" -o "$DISABLE_TMUX_POWERLINE" = "false"' \
  'set-option -g status-left "#(~/.tmux/tmux-powerline/powerline.sh left)"'
if 'test -z "$DISABLE_TMUX_POWERLINE" -o "$DISABLE_TMUX_POWERLINE" = "false"' \
  'set-option -g status-right "#(~/.tmux/tmux-powerline/powerline.sh right)"'

# Disable tmux-powerline
if 'test "$DISABLE_TMUX_POWERLINE" = "true"' \
  'set-option -g status-justify "left"'
if 'test "$DISABLE_TMUX_POWERLINE" = "true"' \
  'set-option -g status-position bottom'
if 'test "$DISABLE_TMUX_POWERLINE" = "true"' \
  'set-option -g status-left-length 40'
if 'test "$DISABLE_TMUX_POWERLINE" = "true"' \
  'set-option -g status-left "#[fg=yellow][#S:#I:#P]"'
if 'test "$DISABLE_TMUX_POWERLINE" = "true"' \
  'set-option -g status-right "#[fg=cyan][%Y-%m-%d(%a) %H:%M]"'

# Unable scroll up and down
set -g mouse on
bind-key -T edit-mode-vi WheelUpPane send-keys -X scroll-up
bind-key -T edit-mode-vi WheelDownPane send-keys -X scroll-down
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "xclip -selection clipboard -i"
# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i"
# https://github.com/tmux/tmux/issues/140
# disable "release mouse drag to copy and exit copy-mode", ref: https://github.com/tmux/tmux/issues/140
# unbind-key -T copy-mode-vi MouseDragEnd1Pane
# since MouseDragEnd1Pane neither exit copy-mode nor clear selection now,
# let single click do selection clearing for us.
# bind-key -T copy-mode-vi MouseDown1Pane select-pane\; send-keys -X clear-selection
# this line changes the default binding of MouseDrag1Pane, the only difference
# is that we use `copy-mode -eM` instead of `copy-mode -M`, so that WheelDownPane
# can trigger copy-mode to exit when copy-mode is entered by MouseDrag1Pane
# bind -n MouseDrag1Pane if -Ft= '#{mouse_any_flag}' 'if -Ft= \"#{pane_in_mode}\" \"copy-mode -eM\" \"send-keys -M\"' 'copy-mode -eM'


# Restore sessions
set -g @tpm_plugins '         \
  tmux-plugins/tpm            \
  tmux-plugins/tmux-continuum \
  tmux-plugins/tmux-resurrect \
  tmux-plugins/tmux-sensible  \
  tmux-plugins/tmux-yank      \
'

set -g @resurrect-strategy-vim 'session'
set -g @resurrect-processes 'irb pry "~rails server" "~rails console" fish vim'
set -g @continuum-save-interval '5'
set -g @continuum-restore 'on'

set-environment -g PATH "/usr/local/bin:/bin:/usr/bin"
run-shell '~/.tmux/plugins/tpm/tpm'

